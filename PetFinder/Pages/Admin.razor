@page "/admin"
@inject ICityService CityService
@inject IAnimalTypeService AnimalTypeService

<section class="container-fluid bg-orange-dark">
    <div class="row">
        <div class="col-12 mt-3 mb-3">
            <a href="agregar" class="btn bg-orange text-white mr-2 mt-1">
                <span><i class="fa fa-paw"></i></span>
                <span>Añadir mascota perdida</span>
            </a>
            <a href="agregar-ciudad" class="btn bg-orange text-white mr-2 mt-1">
                <span><i class="fa fa-city"></i></span>
                <span>Añadir ciudad</span>
            </a>
            <a href="agregar-tipo-de-animal" class="btn bg-orange text-white mr-2 mt-1">
                <span><i class="fa fa-feather"></i></span>
                <span>Añadir tipo de animal</span>
            </a>
            <a href="usuarios" class="btn bg-orange text-white mr-2 mt-1">
                <span><i class="fa fa-users"></i></span>
                <span>Tabla de usuarios</span>
            </a>
        </div>
    </div>
</section>

<section class="container">
    <div class="row">
        <div class="col-12 col-md-6 mt-4">
            <ul class="list-group">
                <li class="list-group-item bg-orange text-white m-0">Ciudades</li>
                @if (cities == null)
                {
                    <li class="list-group-item d-flex align-items-center">Cargando...</li>
                }
                else
                {
                    @foreach (var city in cities)
                    {
                        <li class="list-group-item d-flex align-items-center">
                            <div class="col-6 text-left">@city.Name</div>
                            <div class="col-6 text-right">
                                <a href="editar-ciudad/@city.Id" class="btn bg-gray text-white">Editar</a>
                                <button type="button" value="Delete" class="btn bg-red text-white" @onclick="() => DeleteCity(city)">Eliminar</button>
                            </div>
                        </li>
                    }
                }
            </ul>
        </div>
        <div class="col-12 col-md-6 mt-4">
            <ul class="list-group">
                <li class="list-group-item  bg-orange text-white m-0">Tipo de animal</li>
                @if (animalTypes == null)
                {
                    <li class="list-group-item d-flex align-items-center">Cargando...</li>
                }
                else
                {
                    @foreach (var animalType in animalTypes)
                    {
                        <li class="list-group-item d-flex align-items-center">
                            <div class="col-6 text-left">@animalType.Name</div>
                            <div class="col-6 text-right">
                                <button type="button" value="Delete" class="btn bg-red text-white" @onclick="() => DeleteAnimalType(animalType)">Eliminar</button>
                                <a href="editar-tipo-de-animal/@animalType.Id" class="btn bg-gray text-white">Editar</a>
                            </div>
                        </li>
                    }
                }
            </ul>
        </div>
    </div>
</section>

<section class="container">
    <h1>Acá van las mascotas TODO</h1>
</section>

<Modal @ref="confirmationModal">
    <Title>
        Eliminar
    </Title>
    <Body>
        <p>
            ¿Está seguro que desea eliminar?
        </p>
    </Body>
    <Footer>
        <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="() => confirmationModal.Close()">Cancelar</button>
        <button type="button" class="btn btn-danger" data-dismiss="modal" @onclick="() => confirmationModal.Confirm()">Confirmar</button>
    </Footer>
</Modal>

@code {
    public IEnumerable<City> cities { get; set; }
    public IEnumerable<AnimalType> animalTypes  { get; set; }

    public string Message { get; set; }
    private Modal confirmationModal { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            cities = await CityService.GetAll();
            animalTypes = await AnimalTypeService.GetAll();
        }
        catch (Exception e)
        {
            Message = e.Message;
        }
    }

    private void DeleteAnimalType(AnimalType animalType)
    {
        confirmationModal.isWarning = true;
        confirmationModal.Open();
        confirmationModal.OnConfirm(async () =>
        {
            bool result = await AnimalTypeService.Delete(animalType.Id);
            if (result)
            {
                //Actualizo la lista con la db
                animalTypes = await AnimalTypeService.GetAll();
                StateHasChanged();
            }
        });
    }
    private void DeleteCity(City city)
    {
        confirmationModal.isWarning = true;
        confirmationModal.Open();
        confirmationModal.OnConfirm(async () =>
        {
            bool result = await CityService.Delete(city.Id);
            if (result)
            {
                //Actualizo la lista con la db
                cities = await CityService.GetAll();
                StateHasChanged();
            }
        });
    }
}