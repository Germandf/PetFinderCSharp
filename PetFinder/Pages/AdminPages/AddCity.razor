@page "/agregar-ciudad"
@page "/editar-ciudad/{id:int}"
@using PetFinder.Helpers;

@inject ICityService CityService
@inject NavigationManager NavigationManager

<AuthorizeView Roles="@ApplicationUserService.ROLE_ADMIN">
    <Authorized>
        <div class="row">
            <div class="col-12 mt-5 text-center">
                <EditForm Context="editFormContext" Model="@city" id="addcityForm" class="form-signin text-left shadow rounded">
                    <!-- Muestra el titulo correspondiente -->
                    @if (id != 0 && isError == false)
                    {
                        <h1 class="h3 mb-3 font-weight-normal">Editar ciudad</h1>
                    }
                    else
                    {
                        <h1 class="h3 mb-3 font-weight-normal">Agregar ciudad</h1>
                    }
                    <label for="inputName" class="sr-only mt-3 ">Nombre</label>
                    <input id="inputName" type="text" class="mt-3 form-control" placeholder="Nombre" required autofocus="" @bind="city.Name">
                    <div class="d-block text-right">
                        <button class="mt-2 text-white btn-lg bg-orange-dark" type="button" value="Cancel" @onclick="Cancel">Cancelar</button>
                        <button class="mt-2 text-white btn-lg bg-orange" type="submit" value="Save" @onclick="SaveCity">Confirmar</button>
                    </div>
                    @if (isError)
                    {
                        <div class="alert alert-danger mt-2">
                            <ul>
                                @foreach(string error in errorsOnSaving)
                                {
                                    <li> @error </li>
                                }
                            </ul>
                        </div>
                    }
                </EditForm>
            </div>
        </div>

        <Modal @ref="modal">
            <Title>
                ¡Se guardó con éxito!
            </Title>
            <Body>
                <p>
                    La ciudad @city.Name se guardó con éxito.
                </p>
            </Body>
            <Footer>
                <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick='() => NavigationManager.NavigateTo("/admin")'>Cerrar</button>
            </Footer>
        </Modal>
    </Authorized>

    <NotAuthorized>
        <Error>
            <Message> No tiene permisos para acceder a esta página</Message>
        </Error>
    </NotAuthorized>
</AuthorizeView>

@code {
    [Parameter]
    public int id { get; set; }

    private City city = new City();
    public bool isError { get; set; }
    private Modal modal { get; set; }
    private List<string> errorsOnSaving = new List<string>();

    protected override async Task OnInitializedAsync()
    {
        if (id != 0)
        {
            city = await CityService.Get(id);
            if (city == null)
            {
                errorsOnSaving.Add("No se encontro la ciudad");
                isError = true;
                city = new City();
            }
        }
    }

    protected async Task SaveCity()
    {
        errorsOnSaving = new List<string>();
        GenericResult result = await CityService.Save(city);

        if (result.Success)
        {
            modal.Open();
        }
        else
        {
            isError = true;
            errorsOnSaving = result.Errors;
            StateHasChanged();
            return;
        }
    }

    protected void Cancel()
    {
        NavigationManager.NavigateTo("/admin");
    }
}