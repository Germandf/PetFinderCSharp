@page "/agregar-tipo-de-animal"
@page "/editar-tipo-de-animal/{id:int}"
@using PetFinder.ViewModels
@inject NavigationManager Navigator
@inject ICategoryService<AnimalType> AnimalTypeService

<AuthorizeView Roles="@ApplicationUserService.ROLE_ADMIN">
    <Authorized>
        <div class="row">
            <div class="col-12 mt-5 text-center">
                <EditForm Context="editFormContext" Model="@_animalTypeViewModel" class="form-signin text-left shadow rounded">
                    <!-- Muestra el titulo correspondiente -->
                    <h1 class="h3 mb-3 font-weight-normal">
                        @if (IsEditing)
                        {
                            <span> Editar tipo de animal</span>
                        }
                        else
                        {
                            <span> Agregar nuevo tipo de animal</span>
                        }
                    </h1>
                    <label for="inputName" class="sr-only mt-3 ">Nombre</label>
                    <input id="inputName" type="text" class="mt-3 form-control"
                           placeholder="Nombre" required autofocus="" name="name"
                           @bind="_animalTypeViewModel.Name">
                    <div class="d-block text-right">
                        <button class="mt-2  text-white btn-lg bg-orange" type="submit" @onclick="Save">Confirmar</button>
                    </div>
                    @if (IsError)
                    {
                        <div class="alert alert-danger mt-2">
                            <ul>
                                @foreach (var error in _errorsOnSaving)
                                {
                                    <li> @error </li>
                                }
                            </ul>
                        </div>
                    }
                </EditForm>
            </div>
        </div>

        <Modal @ref="Modal">
            <Title>
                ¡ Se guardo con exito !
            </Title>
            <Body>
            <p>
                El animal @_animalTypeViewModel.Name se guardó con exito.
            </p>
            </Body>
            <Footer>
                <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick='() => Navigator.NavigateTo("/admin")'>Cerrar</button>
            </Footer>
        </Modal>
    </Authorized>
    <NotAuthorized>
        <Error>
            <Message> No tiene permisos para acceder a esta página</Message>
        </Error>
    </NotAuthorized>
</AuthorizeView>

@code {

    [Parameter]
    public int Id { get; set; }

    private Modal Modal { get; set; }
    private bool IsError { get; set; }
    private bool IsEditing { get; set; }
    private List<string> _errorsOnSaving = new();
    private readonly CategoryViewModel<AnimalType> _animalTypeViewModel = new();

    protected override async Task OnInitializedAsync()
    {
        if (Id != 0)
        {
            var animalType = await AnimalTypeService.Get(Id);
            if (animalType == null)
            {
                IsError = true;
                _errorsOnSaving.Add("No se encontro el tipo de animal");
                Navigator.NavigateTo("/admin");
            }
            else
            {
                IsEditing = true;
                _animalTypeViewModel.ConvertFromCategory(animalType);
            }
        }
    }

    protected async Task Save()
    {
        _errorsOnSaving = new List<string>();
        var result = await AnimalTypeService.Save(_animalTypeViewModel);
        if (result.Success)
        {
            Modal.Open();
        }
        else
        {
            IsError = true;
            _errorsOnSaving = result.Errors;
            StateHasChanged();
        }
    }

}