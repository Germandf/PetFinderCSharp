@inject ICategoryService<City> CityService
@inject ICategoryService<AnimalType> AnimalTypeService
@inject ICategoryService<Gender> GenderService
@inject NavigationManager NavigationManager

<section class="container-fluid bg-blue-whiter">
    <form @onsubmit="Filter" class="row">
        <!-- City -->
        <div class="col-12 col-md-auto">
            <select id="inputCity" class="d-inline form-control mt-3" name="city" @bind="_selectedCity.SerializedName">
                @if (Cities == null)
                {
                    <option selected disabled hidden>Loading...</option>
                }
                else
                {
                    <option selected disabled hidden>Ciudad</option>
                    <option value="">Todas</option>
                    foreach (var city in Cities)
                    {
                        <option value="@city.SerializedName">@city.Name</option>
                    }
                }
            </select>
        </div>
        <!-- Animal Type -->
        <div class="col-12 col-md-auto">
            <select id="inputAnimalType" class="d-inline form-control mt-3" name="animalType" @bind="_selectedAnimalType.SerializedName">
                @if (AnimalTypes == null)
                {
                    <option selected disabled hidden>Loading...</option>
                }
                else
                {
                    <option selected disabled hidden>Tipo de mascota</option>
                    <option value="">Todos</option>
                    foreach (var animalType in AnimalTypes)
                    {
                        <option value="@animalType.SerializedName">@animalType.Name</option>
                    }
                }
            </select>
        </div>
        <!-- Gender -->
        <div class="col-12 col-md-auto">
            <select id="inputGender" class="d-inline form-control mt-3" name="gender" @bind="_selectedGender.SerializedName">
                @if (Genders == null)
                {
                    <option selected disabled hidden>Loading...</option>
                }
                else
                {
                    <option selected disabled hidden>Género</option>
                    <option value="">Ambos</option>
                    foreach (var gender in Genders)
                    {
                        <option value="@gender.SerializedName">@gender.Name</option>
                    }
                }
            </select>
        </div>
        <!-- Name or Description -->
        <div class="col-12 col-md-auto">
            <input id="search" class="d-inline form-control mt-3" type="text" placeholder="Nombre o descripción" name="search" @bind="_searchText">
        </div>
        <!-- Filter -->
        <div class="col-12 col-md-auto d-flex justify-content-center mt-3 mt-md-0">
            <button type="button" class="text-white d-inline btn bg-blue mt-md-3 mb-3" @onclick="Filter">
                Filtrar
            </button>
        </div>
    </form>
</section>

@code {

    [Parameter]
    public IEnumerable<City> Cities { get; set; }

    [Parameter]
    public IEnumerable<AnimalType> AnimalTypes { get; set; }

    [Parameter]
    public IEnumerable<Gender> Genders { get; set; }

    private City _selectedCity = new();
    private AnimalType _selectedAnimalType = new();
    private Gender _selectedGender = new();
    private string _searchText = null;

    private void Filter()
    {
        var urlFilter = "/filtrar";
        if (_selectedCity.SerializedName != null)
        {
            urlFilter += $"/ciudad-{_selectedCity.SerializedName.ToLower()}";
        }
        if (_selectedAnimalType.SerializedName != null)
        {
            urlFilter += $"/tipo-{_selectedAnimalType.SerializedName.ToLower()}";
        }
        if (_selectedGender.SerializedName != null)
        {
            urlFilter += $"/genero-{_selectedGender.SerializedName.ToLower()}";
        }
        if (_searchText != null)
        {
            urlFilter += $"/contiene-{_searchText}";
        }
        if (urlFilter.Length > 0)
        {
            NavigationManager.NavigateTo(urlFilter);
        }
    }

}